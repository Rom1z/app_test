<?xml version="1.0" encoding="utf-8"?>
<resources xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto">
    <style name="Base.Theme.DesignDemo" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <item name="colorPrimary">@color/primary_green</item>
        <item name="colorPrimaryDark">@color/primary_green_variant</item>
        <item name="colorOnPrimary">@color/primary_white</item>

        <item name="colorSecondary">@color/secondary_blue</item>
        <item name="colorSecondaryVariant">@color/secondary_blue_variant</item>
        <item name="colorOnSecondary">@color/on_secondary_whitegrey</item>

        <item name="colorSurface">@color/color_surface</item>
        <item name="colorOnSurface">@color/color_on_surface</item>

        <item name="colorError">@color/error_red</item>
        <item name="colorOnError">@color/color_on_error_red</item>

        <item name="textAppearanceHeadline6">@style/TextAppearance.MyApp.Headline6</item>
        <item name="textAppearanceHeadline5">@style/TextAppearance.MyApp.Headline5</item>
        <item name="textAppearanceHeadline1">@style/TextAppearance.MyApp.Headline1</item>
        <item name="textAppearanceBody1">@style/TextAppearance.MyApp.Body1</item>
        <item name="textAppearanceSubtitle2">@style/TextAppearance.MyApp.Subtitle2</item>
        <item name="textAppearanceCaption">@style/TextAppearance.MyApp.Caption</item>
    </style>

    <style name="Base.Theme.DesignDemo.Launcher">
        <item name="android:windowBackground">@drawable/bg_splash</item>
    </style>

    <!--Create custom style for a Component, that will be applied manually-->
    <style name="Widget.CardContent" parent="android:Widget">
        <item name="android:paddingLeft">16dp</item>
        <item name="android:paddingRight">16dp</item>
        <item name="android:paddingTop">24dp</item>
        <item name="android:paddingBottom">24dp</item>
        <item name="android:orientation">vertical</item>
    </style>

    <!-- Example changes the color background to use Primary color instead of default Secondary for Button Backgrounds -->
    <style name="CustomButton" parent="Widget.MaterialComponents.Button">
        <item name="backgroundTint">?attr/colorSecondary</item>
    </style>

    <style name="TextScaleStyle">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:padding">8dp</item>
        <item name="android:background">@drawable/bg_selector</item>
        <item name="android:onClick">scaleTextItemClicked</item>
    </style>

    <style name="TextAppearance.MyApp.Headline6" parent="TextAppearance.MaterialComponents.Headline6">
        <item name="fontFamily">@font/raleway</item>
    </style>

    <style name="TextAppearance.MyApp.Headline5" parent="TextAppearance.MaterialComponents.Headline5">
        <item name="fontFamily">@font/raleway</item>
    </style>

    <style name="TextAppearance.MyApp.Headline1" parent="TextAppearance.MaterialComponents.Headline1">
        <item name="fontFamily">@font/raleway</item>
    </style>

    <style name="TextAppearance.MyApp.Body1" parent="TextAppearance.MaterialComponents.Body1">
        <item name="fontFamily">@font/robotoslab</item>
    </style>

    <style name="TextAppearance.MyApp.Subtitle2" parent="TextAppearance.MaterialComponents.Subtitle2">
        <item name="fontFamily">@font/robotoslab</item>
    </style>

    <style name="TextAppearance.MyApp.Caption" parent="TextAppearance.MaterialComponents.Caption">
        <item name="fontFamily">@font/robotoslab</item>
    </style>

    <style name="specItemStyle">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:gravity">center_vertical</item>
        <item name="android:layout_marginTop">16dp</item>
        <item name="android:drawablePadding">8dp</item>
        <item name="android:paddingLeft">16dp</item>
        <item name="android:paddingRight">8dp</item>
        <item name="android:paddingBottom">16dp</item>
        <item name="android:maxWidth">224dp</item>
        <item name="android:textAppearance">?textAppearanceBody1</item>
    </style>

    <style name="card_style">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginLeft">8dp</item>
        <item name="android:layout_marginTop">8dp</item>
        <item name="android:layout_marginRight">8dp</item>
        <item name="android:layout_marginBottom">16dp</item>
    </style>

    <style name="ChipLabel" parent="Widget.MaterialComponents.Chip.Action">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_gravity">center_horizontal</item>
        <item name="android:layout_marginTop">16dp</item>
        <item name="android:clickable">false</item>
    </style>

    <style name="specItem">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:drawablePadding">8dp</item>
        <item name="android:layout_marginTop">16dp</item>
        <item name="android:paddingLeft">16dp</item>
        <item name="android:paddingRight">8dp</item>
        <item name="android:paddingBottom">16dp</item>
        <item name="android:textAppearance">?textAppearanceBody1</item>
    </style>

    <style name="specItemStyle.xtra">

    </style>

    <!-- then if you want to apply it to your app universally, make sure to add it to your base theme theme
    <style name="Base.Theme.DesignDemo" parent="Theme.MaterialComponents.Light.NoActionBar">
        ...
        <item name="materialButtonStyle">@style/CustomButton</item>
    </style> -->

</resources>
